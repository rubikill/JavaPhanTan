<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

        <!-- DispatcherServlet Context: defines this servlet's request-processing 
                infrastructure -->

        <context:component-scan base-package="co.hcmus" />
        <beans:bean
                class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

        <!-- Factory bean that creates the Mongo instance -->
        <beans:bean id="mongo"
                class="org.springframework.data.mongodb.core.MongoFactoryBean">
                <beans:property name="host" value="localhost" />
        </beans:bean>
        <beans:bean id="initBean" class="co.hcmus.app.Initialization"/>
        <context:annotation-config />
        <!-- MongoTemplate for connecting and quering the documents in the database -->
        <beans:bean id="mongoTemplate"
                class="org.springframework.data.mongodb.core.MongoTemplate">
                <beans:constructor-arg name="mongo" ref="mongo" />
                <beans:constructor-arg name="databaseName"
                        value="shop" />
        </beans:bean>

        <!-- Use this post processor to translate any MongoExceptions thrown in 
                @Repository annotated classes -->
        <beans:bean
                class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

        <!-- Enables the Spring MVC @Controller programming model -->
        <annotation-driven />

        <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
                up static resources in the ${webappRoot}/resources directory -->
        <resources mapping="/**" location="/resources/" />

        <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
                in the /WEB-INF/views directory -->
        <beans:bean id="viewResolver"
                class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                <beans:property name="viewClass">
                        <beans:value>
                                org.springframework.web.servlet.view.tiles2.TilesView
                        </beans:value>
                </beans:property>
        </beans:bean>
        <beans:bean id="tilesConfigurer"
                class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
                <beans:property name="definitions">
                        <beans:list>
                                <beans:value>/WEB-INF/tiles.xml</beans:value>
                        </beans:list>
                </beans:property>
        </beans:bean>

        <context:component-scan base-package="co.hcmus.controllers" />
        <!-- Add annotation-config for PostConstruct -->


</beans:beans>